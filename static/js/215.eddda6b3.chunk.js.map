{"version":3,"file":"static/js/215.eddda6b3.chunk.js","mappings":"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","sources":["components/Layout/Layout.styled.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/ContactForm/ContactForm.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","components/Layout/Layout.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    max-width: 700px;\n    padding: 30px;\n    margin: 5px auto;\n`\n","import styled from 'styled-components';\nimport { ImExit } from 'react-icons/im';\n\n\nexport const UserContainer = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-wrap: wrap;\n  justify-content: end;\n  align-items: center;\n`;\nexport const UserTitle = styled.p`\ndisplay: block;\n  justify-content: center;\n  margin: 0;\n`;\n// export const UserOut = styled(Button)`\n//   border: none;\n//   background-color: transparent;\n// `;\nexport const ExitIcon = styled(ImExit)`\n  width: 30px;\n  height: 25px;\n  &:hover {\n    fill: #d9cb04;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"redux/auth/operations\";\nimport { selectUser } from \"redux/auth/selectors\";\nimport { ExitIcon, UserContainer, UserTitle } from \"./UserMenu.styled\";\nimport Button from 'react-bootstrap/Button';\n\n\nexport function UserMenu() {\n    const {name} = useSelector(selectUser)\n    const dispatch = useDispatch();\n\n  return (\n    <UserContainer>\n      <UserTitle>Welcome, {name}</UserTitle>\n      <Button variant=\"link\" onClick={() => dispatch(logOut())}><ExitIcon/></Button>\n    </UserContainer>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nexport function ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoadingContacts);\n\n  const dispatch = useDispatch();\n\n  const handChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n      // id: nanoid()\n    };\n    const nameCheck = contacts.find(({ name }) => name === newContact.name);\n    if (nameCheck) {\n      toast.error(`${newContact.name} is already in contacts`);\n      return reset();\n    }\n    dispatch(addContact(newContact));\n    toast.success(`${newContact.name} added successfully`)\n    props.onHide()\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create Cotantact\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handChange}\n              value={name}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Enter number\"\n              name=\"number\"\n              pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handChange}\n              value={number}\n            />\n          </Form.Group>\n          {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Add this contact in favorite\" />\n          </Form.Group> */}\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={isLoading ? true : false}\n          >\n            add Contact\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nContactForm.propTypes = {\n  createContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { RiUserAddFill } from 'react-icons/ri';\nimport { MdFavorite } from 'react-icons/md';\nimport Navbar from 'react-bootstrap/Navbar';\n\nexport const Navigate = styled(Navbar)`\n    justify-content: space-between;\n    padding: 5px 20px;\n    margin-bottom: 15px;\n`\nexport const AddContact = styled(RiUserAddFill)`\n        width: 30px;\n        height: 25px;\n        &:hover{\n            fill: #d9cb04;\n        }\n`\nexport const FavoriteIcon = styled(MdFavorite)`\n        width: 30px;\n        height: 25px;\n        &:hover{\n            fill: #d9cb04;\n        }\n`","import Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { useState } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { AddContact, FavoriteIcon, Navigate } from './Header.styled';\n\n\nexport const Header = () => {\n    const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <Navigate collapseOnSelect expand=\"lg\" className=\"bg-body-tertiary\">\n        <Navbar.Brand>\n          <Button variant=\"link\" onClick={() => setModalShow(true)}>\n            <AddContact />\n          </Button>\n        </Navbar.Brand>\n        <Navbar.Brand>\n          <Button variant=\"link\">\n            <FavoriteIcon />\n          </Button>\n        </Navbar.Brand>\n        <Navbar.Brand>\n          <UserMenu />\n        </Navbar.Brand>\n      </Navigate>\n      <ContactForm show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n};\n","import { Container } from './Layout.styled';\nimport { Suspense } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\n\nexport default function Layout() {\n  return (\n    <Container>\n      <Header/>\n      <Suspense fallback={<><p>...loading</p></>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contactsBook.contacts;\nexport const selectFilter = state => state.contactsBook.filter;\nexport const selectIsLoadingContacts = state => state.contactsBook.isLoading;\nexport const selectErrorContacts = state => state.contactsBook.error;\nexport const selectElectContact = state => state.contactsBook.electContact;\n\nexport const getVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n     return contacts.filter(({name})=> name.toLowerCase()\n            .includes(filter.toLowerCase()))\n    }\n  )\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","UserContainer","UserTitle","_templateObject2","ExitIcon","ImExit","_templateObject3","UserMenu","name","useSelector","selectUser","dispatch","useDispatch","_jsxs","children","_jsx","Button","variant","onClick","logOut","ContactForm","props","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","contacts","selectContacts","isLoading","selectIsLoadingContacts","handChange","_ref","target","value","reset","Modal","_objectSpread","size","centered","closeButton","id","Form","onSubmit","e","preventDefault","newContact","find","_ref2","toast","concat","addContact","onHide","className","controlId","type","placeholder","pattern","title","required","onChange","disabled","Navigate","Navbar","AddContact","RiUserAddFill","FavoriteIcon","MdFavorite","Header","modalShow","setModalShow","_Fragment","collapseOnSelect","expand","show","Layout","Suspense","fallback","Outlet","state","contactsBook","selectFilter","filter","selectElectContact","electContact","getVisibleContacts","createSelector","toLowerCase","includes"],"sourceRoot":""}