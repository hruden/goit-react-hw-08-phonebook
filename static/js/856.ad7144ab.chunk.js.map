{"version":3,"file":"static/js/856.ad7144ab.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/EditForm/EditForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Layout/Layout.styled.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/Layout/Layout.jsx","components/Pages/Home.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contactsBook.contacts;\nexport const selectFilter = state => state.contactsBook.filter;\nexport const selectIsLoadingContacts = state => state.contactsBook.isLoading;\nexport const selectErrorContacts = state => state.contactsBook.error;\nexport const selectElectContact = state => state.contactsBook.electContact;\n\nexport const getVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n     return contacts.filter(({name})=> name.toLowerCase()\n            .includes(filter.toLowerCase()))\n    }\n  )\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nexport function ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoadingContacts);\n\n  const dispatch = useDispatch();\n\n  const handChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n      // id: nanoid()\n    };\n    const nameCheck = contacts.find(({ name }) => name === newContact.name);\n    if (nameCheck) {\n      toast.error(`${newContact.name} is already in contacts`);\n      return reset();\n    }\n    // addContact(newContact)\n    dispatch(addContact(newContact));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create Cotantact\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handChange}\n              value={name}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Enter number\"\n              name=\"number\"\n              pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handChange}\n              value={number}\n            />\n          </Form.Group>\n          {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Add this contact in favorite\" />\n          </Form.Group> */}\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={isLoading ? true : false}\n          >\n            add Contact\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nContactForm.propTypes = {\n  createContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n// import Spinner from 'react-bootstrap/Spinner';\nimport { IoMdContact } from 'react-icons/io';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { MdFavorite } from 'react-icons/md';\nimport { FaUserEdit } from 'react-icons/fa';\n\n\n// export const  ContactsBook = styled.ul`\n//     display: flex;\n//     flex-direction: column;\n//     gap: 10px;\n//     padding: 15px 5px;\n//     width: 400px;\n// `\n// export const ContactsItem = styled.li`\n//     position: relative;\n//     display: flex;\n//     align-items: center;\n//     &::before{\n//         content: '';\n//         width: 3px;\n//         height: 3px;\n//         border: 1px solid black;\n//         border-radius: 50%;\n//         background-color: black;\n//         margin-right: 5px;\n//     }\n// `\nexport const DeleteContact = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #DC143C;\n    }\n`\nexport const ContactIcon = styled(IoMdContact)`\nwidth: 25px;\nheight: 25px;\nmargin-right: 15px;\n`\nexport const ContactName = styled.div`\ndisplay: flex;\ngap: 15px;\nfont-size: large;\n`\nexport const Name = styled.p`\ndisplay: block;\n`\nexport const DeleteIcon = styled(AiFillDelete)`\nwidth: 25px;\nheight: 25px;\n`\nexport const MoreDitails = styled.div`\ndisplay:flex;\npadding: 0 40px;\njustify-content: space-between;\n`\nexport const EditBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #2281f5;\n    }\n`\nexport const EditIcon = styled(FaUserEdit)`\nwidth: 25px;\nheight: 25px;\n`\nexport const FavoriteBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #d9cb04;\n    }\n`\nexport const FavoriteIcon = styled(MdFavorite)`\nwidth: 25px;\nheight: 25px;\n`","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  // getVisibleContacts,\n  selectContacts,\n  selectElectContact,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { updateContact } from 'redux/contacts/operations';\n\nexport function EditForm(props) {\n  // const contactsList = useSelector(getVisibleContacts);\n  // const editContact = contactsList.filter(el => el.id === props.id)\n    const electContact = useSelector(selectElectContact)\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoadingContacts);\n    const dispatch = useDispatch();\n\n    const handChange = ({ target }) => {\n      switch (target.name) {\n        case 'name':\n          setName(target.value);\n          break;\n        case 'number':\n          setNumber(target.value);\n          break;\n        default:\n          return;\n      }\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const exemple = {\n        name: electContact.name,\n        number: electContact.number,\n        id: electContact.id,\n      }\n      console.log(exemple)\n      const newContact = {\n        name: name,\n        number: number,\n        id: electContact.id,\n      };\n      const nameCheck = contacts.find(({ name }) => name === newContact.name);\n      if (nameCheck) {\n        toast.error(`${newContact.name} is already in contacts`);\n        return;\n      }\n      console.log(newContact)\n      dispatch(updateContact(newContact));\n      reset();\n    };\n    const reset = () => {\n      setName('');\n      setNumber('');\n    };\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Contact\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={electContact.name}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handChange}\n                value={name}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Number</Form.Label>\n              <Form.Control\n                type=\"tel\"\n                placeholder={electContact.number}\n                name=\"number\"\n                pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handChange}\n                value={number}\n              />\n            </Form.Group>\n            {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Add this contact in favorite\" />\n            </Form.Group> */}\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={isLoading ? true : false}\n            >\n              edit Contact\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }","import {\n  ContactIcon,\n  ContactName,\n  DeleteContact,\n  DeleteIcon,\n  EditBtn,\n  EditIcon,\n  FavoriteBtn,\n  FavoriteIcon,\n  MoreDitails,\n  Name,\n} from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  getVisibleContacts,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { useState } from 'react';\nimport { electContactChange } from 'redux/contacts/slice';\n// import { IoMdContact } from 'react-icons/io';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const contactsList = useSelector(getVisibleContacts);\n  const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <Accordion defaultActiveKey=\"0\">\n      {contactsList.map(({ id, name, number }) => (\n        <Accordion.Item eventKey={id} key={id}>\n          <EditForm\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            // names={name}\n            // numbers={number}\n          />\n          <Accordion.Header>\n            <ContactName>\n              <ContactIcon />\n              <Name>{name}:</Name>\n              <Name>{number}</Name>\n            </ContactName>\n          </Accordion.Header>\n          <Accordion.Body>\n            <MoreDitails>\n              <EditBtn\n                onClick={() => {\n                  setModalShow(true);\n                  dispatch(electContactChange({ id, name, number }))\n                }}\n              >\n                <EditIcon />\n              </EditBtn>\n              <FavoriteBtn>\n                <FavoriteIcon />\n              </FavoriteBtn>\n              <DeleteContact\n                onClick={() => dispatch(deleteContact(id))}\n                disabled={isLoading ? true : false}\n              >\n                <DeleteIcon />\n              </DeleteContact>\n            </MoreDitails>\n          </Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n\n    // if(isError){\n    //     return(<div>{error.message}</div>)\n    // }\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  removeContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport const FilterInput = styled(InputGroup)`\nmargin-bottom: 30px;\n`\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterContacts } from 'redux/contacts/slice';\nimport Form from 'react-bootstrap/Form';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter)\n  const dispatch = useDispatch();\n\n  const handleFind = ({ target }) => {\n    const normalizedValue = target.value.trim().toLocaleLowerCase();\n    dispatch(filterContacts(normalizedValue));\n  };\n  return (\n    <>\n    <FilterInput size=\"lg\">\n        <Form.Control\n          aria-label=\"Large\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          onChange={handleFind}\n          value={filter}\n          name=\"searchContact\"\n          type=\"text\"\n          placeholder=\"Search contacts...\"\n  \n        />\n      </FilterInput>\n      {/* <input\n        onChange={handleFind}\n        value={filter}\n        name=\"searchContact\"\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n      /> */}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  searchContact: PropTypes.string,\n  handleFind: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport Alert from 'react-bootstrap/Alert';\nimport { RiUserAddFill } from 'react-icons/ri';\nimport { MdFavorite } from 'react-icons/md';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\n\n\nexport const Container = styled.div`\n    max-width: 700px;\n    padding: 30px;\n    margin: 5px auto;\n`\nexport const NotFoundAlert = styled(Alert)`\n    margin-top: 15px;\n    width: 400px;\n`\nexport const Navigate = styled(Navbar)`\n    justify-content: space-between;\n    padding: 5px 20px;\n    margin-bottom: 15px;\n`\nexport const AddContact = styled(RiUserAddFill)`\n        width: 30px;\n        height: 25px;\n        &:hover{\n            fill: #d9cb04;\n        }\n`\nexport const FavoriteIcon = styled(MdFavorite)`\n        width: 30px;\n        height: 25px;\n        &:hover{\n            fill: #d9cb04;\n        }\n`\nexport const Title = styled.h2`\n    text-align: center;\n    margin-bottom: 15px;\n`","import styled from 'styled-components';\nimport { ImExit } from 'react-icons/im';\n\n\nexport const UserContainer = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-wrap: wrap;\n  justify-content: end;\n  align-items: center;\n`;\nexport const UserTitle = styled.p`\ndisplay: block;\n  justify-content: center;\n  margin: 0;\n`;\n// export const UserOut = styled(Button)`\n//   border: none;\n//   background-color: transparent;\n// `;\nexport const ExitIcon = styled(ImExit)`\n  width: 30px;\n  height: 25px;\n  &:hover {\n    fill: #d9cb04;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"redux/auth/operations\";\nimport { selectUser } from \"redux/auth/selectors\";\nimport { ExitIcon, UserContainer, UserTitle } from \"./UserMenu.styled\";\nimport Button from 'react-bootstrap/Button';\n\n\nexport function UserMenu() {\n    const {name} = useSelector(selectUser)\n    const dispatch = useDispatch();\n\n  return (\n    <UserContainer>\n      <UserTitle>Welcome, {name}</UserTitle>\n      <Button variant=\"link\" onClick={() => dispatch(logOut())}><ExitIcon/></Button>\n    </UserContainer>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { NotFoundAlert, Container, AddContact, FavoriteIcon, Navigate, Title } from './Layout.styled';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { useEffect, useState } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { RiUserAddFill } from 'react-icons/ri';\n// import { MdFavorite } from 'react-icons/md';\nimport Button from 'react-bootstrap/Button';\n// import Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nexport default function Layout() {\n  const contactsList = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const [modalShow, setModalShow] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <header>\n        <Navigate collapseOnSelect expand=\"lg\" className=\"bg-body-tertiary\">\n          <Navbar.Brand>\n            <Button variant=\"link\" onClick={() => setModalShow(true)}>\n              <AddContact />\n            </Button>\n          </Navbar.Brand>\n          <Navbar.Brand>\n            <Button variant=\"link\">\n              <FavoriteIcon />\n            </Button>\n          </Navbar.Brand>\n          <Navbar.Brand>\n            <UserMenu />\n          </Navbar.Brand>\n        </Navigate>\n      </header>\n      <Title>Contacts</Title>\n      <Filter />\n      {contactsList.length ? (\n        <ContactList />\n      ) : (\n        <NotFoundAlert variant=\"dark\">No matches found!</NotFoundAlert>\n      )}\n\n      <ContactForm show={modalShow} onHide={() => setModalShow(false)} />\n    </Container>\n  );\n}","import Layout from \"components/Layout/Layout\";\n\nexport default function Home() {\n    return (\n      <div>\n        <Layout />\n      </div>\n    );\n  }"],"names":["selectContacts","state","contactsBook","contacts","selectFilter","filter","selectIsLoadingContacts","isLoading","selectElectContact","electContact","getVisibleContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","props","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handChange","target","value","reset","_jsxs","Modal","_objectSpread","size","centered","children","_jsx","closeButton","id","Form","onSubmit","e","preventDefault","newContact","find","_ref2","toast","concat","addContact","className","controlId","type","placeholder","pattern","title","required","onChange","Button","variant","disabled","onClick","onHide","DeleteContact","styled","_templateObject","_taggedTemplateLiteral","ContactIcon","IoMdContact","_templateObject2","ContactName","_templateObject3","Name","_templateObject4","DeleteIcon","AiFillDelete","_templateObject5","MoreDitails","_templateObject6","EditBtn","_templateObject7","EditIcon","FaUserEdit","_templateObject8","FavoriteBtn","_templateObject9","FavoriteIcon","MdFavorite","_templateObject10","EditForm","exemple","console","log","updateContact","ContactList","contactsList","modalShow","setModalShow","Accordion","defaultActiveKey","map","eventKey","show","electContactChange","deleteContact","FilterInput","InputGroup","Filter","_Fragment","normalizedValue","trim","toLocaleLowerCase","filterContacts","Container","NotFoundAlert","Alert","Navigate","Navbar","AddContact","RiUserAddFill","Title","UserContainer","UserTitle","ExitIcon","ImExit","UserMenu","selectUser","logOut","Layout","useEffect","fetchContacts","collapseOnSelect","expand","length","Home"],"sourceRoot":""}