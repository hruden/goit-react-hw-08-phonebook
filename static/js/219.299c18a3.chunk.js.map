{"version":3,"file":"static/js/219.299c18a3.chunk.js","mappings":"0SAIaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAO1BC,EAAYH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEASpBG,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAcO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iF,SCb/B,SAASM,IACZ,IAAOC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAApBF,KACDG,GAAWC,EAAAA,EAAAA,MAEnB,OACEC,EAAAA,EAAAA,MAACf,EAAa,CAAAgB,SAAA,EACZD,EAAAA,EAAAA,MAACX,EAAS,CAAAY,SAAA,CAAC,YAAUN,MACrBO,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,UAAS,EAACL,UAACC,EAAAA,EAAAA,KAACX,EAAQ,QAGzE,C,+DCJO,SAASgB,EAAYC,GAC1B,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Bd,EAAIgB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWtB,EAAAA,EAAAA,IAAYuB,EAAAA,IACvBC,GAAYxB,EAAAA,EAAAA,IAAYyB,EAAAA,IAExBvB,GAAWC,EAAAA,EAAAA,MAEXuB,EAAa,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpB,OAAQA,EAAO7B,MACb,IAAK,OACHkB,EAAQW,EAAOC,OACf,MACF,IAAK,SACHR,EAAUO,EAAOC,OACjB,MACF,QACE,OAEN,EAsBMC,EAAQ,WACZb,EAAQ,IACRI,EAAU,GACZ,EACA,OACEjB,EAAAA,EAAAA,MAAC2B,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACApB,GAAK,IACTqB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EAAA7B,SAAA,EAERC,EAAAA,EAAAA,KAACyB,EAAAA,EAAAA,OAAY,CAACI,aAAW,EAAA9B,UACvBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAAA,MAAW,CAACK,GAAG,gCAA+B/B,SAAC,wBAIlDC,EAAAA,EAAAA,KAACyB,EAAAA,EAAAA,KAAU,CAAA1B,UACTD,EAAAA,EAAAA,MAACiC,EAAAA,EAAI,CAACC,SAnCS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAa,CACjB1C,KAAMA,EACNqB,OAAQA,GAKV,GAFAsB,QAAQC,IAAIF,GACMnB,EAASsB,MAAK,SAAAC,GAAO,OAAAA,EAAJ9C,OAAoB0C,EAAW1C,IAAI,IAGpE,OADA+C,EAAAA,GAAAA,MAAY,GAADC,OAAIN,EAAW1C,KAAI,4BACvB+B,IAET5B,GAAS8C,EAAAA,EAAAA,IAAWP,IACpBK,EAAAA,GAAAA,QAAc,GAADC,OAAIN,EAAW1C,KAAI,wBAChCa,EAAMqC,SACNnB,GACF,EAkBmCzB,SAAA,EAC3BD,EAAAA,EAAAA,MAACiC,EAAAA,EAAAA,MAAU,CAACa,UAAU,OAAOC,UAAU,iBAAgB9C,SAAA,EACrDC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAAA,MAAU,CAAAhC,SAAC,UACZC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAAA,QAAY,CACXe,KAAK,OACLC,YAAY,aACZtD,KAAK,OACLuD,QAAQ,gGACRC,MAAM,yIACNC,UAAQ,EACRC,SAAU/B,EACVG,MAAO9B,QAGXK,EAAAA,EAAAA,MAACiC,EAAAA,EAAAA,MAAU,CAACa,UAAU,OAAOC,UAAU,oBAAmB9C,SAAA,EACxDC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAAA,MAAU,CAAAhC,SAAC,YACZC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAAA,QAAY,CACXe,KAAK,MACLC,YAAY,eACZtD,KAAK,SACLuD,QAAQ,mCACRC,MAAM,+FACNC,UAAQ,EACRC,SAAU/B,EACVG,MAAOT,QAYXd,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAAQ,UACR4C,KAAK,SACLM,WAAUlC,EAAyBnB,SACpC,sBAKLC,EAAAA,EAAAA,KAACyB,EAAAA,EAAAA,OAAY,CAAA1B,UACXC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACE,QAASG,EAAMqC,OAAO5C,SAAC,eAIvC,C,kBCrHasD,GAAWrE,EAAAA,EAAAA,IAAOsE,EAAAA,EAAPtE,CAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iGAKzBqE,GAAavE,EAAAA,EAAAA,IAAOwE,EAAAA,IAAPxE,CAAqBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHCDlCuE,EAAS,WAClB,IAAAlD,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CmD,EAASjD,EAAA,GAAEkD,EAAYlD,EAAA,GAMhC,OACEX,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7D,SAAA,EACED,EAAAA,EAAAA,MAACuD,EAAQ,CAACQ,kBAAgB,EAACC,OAAO,KAAKlB,UAAU,mBAAkB7C,SAAA,EACjEC,EAAAA,EAAAA,KAACsD,EAAAA,EAAAA,MAAY,CAAAvD,UACXC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,QAAS,kBAAMwD,GAAa,EAAK,EAAC5D,UACvDC,EAAAA,EAAAA,KAACuD,EAAU,SAGfvD,EAAAA,EAAAA,KAACsD,EAAAA,EAAAA,MAAY,KAKbtD,EAAAA,EAAAA,KAACsD,EAAAA,EAAAA,MAAY,CAAAvD,UACXC,EAAAA,EAAAA,KAACR,EAAQ,UAGbQ,EAAAA,EAAAA,KAACK,EAAW,CAAC0D,KAAML,EAAWf,OAAQ,kBAAMgB,GAAa,EAAM,MAGrE,E,oBC9Be,SAASK,IACtB,OACElE,EAAAA,EAAAA,MAACmE,EAAAA,EAAS,CAAAlE,SAAA,EACRC,EAAAA,EAAAA,KAACyD,EAAM,KACPzD,EAAAA,EAAAA,KAACkE,EAAAA,SAAQ,CACPC,UACEnE,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CACLC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,YAExD5E,UAEDC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,QAIf,C,sECzBaX,E,QAAYjF,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2E,sKCAtB+B,EAAiB,SAAA4D,GAAK,OAAIA,EAAMC,aAAa9D,QAAS,EACtD+D,EAAe,SAAAF,GAAK,OAAIA,EAAMC,aAAaE,MAAO,EAClD7D,EAA0B,SAAA0D,GAAK,OAAIA,EAAMC,aAAa5D,SAAU,EAEhE+D,EAAqB,SAAAJ,GAAK,OAAIA,EAAMC,aAAaI,YAAa,EAE9DC,GAAqBC,EAAAA,EAAAA,IAC9B,CAACnE,EAAgB8D,IACjB,SAAC/D,EAAUgE,GACV,OAAOhE,EAASgE,QAAO,SAAA3D,GAAM,OAAAA,EAAJ5B,KAAc4F,cAC/BC,SAASN,EAAOK,cAAc,GACvC,G","sources":["components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/ContactForm/ContactForm.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Layout/Layout.styled.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ImExit } from 'react-icons/im';\n\n\nexport const UserContainer = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-wrap: wrap;\n  justify-content: end;\n  align-items: center;\n`;\nexport const UserTitle = styled.p`\ndisplay: block;\n  justify-content: center;\n  margin: 0;\n`;\n// export const UserOut = styled(Button)`\n//   border: none;\n//   background-color: transparent;\n// `;\nexport const ExitIcon = styled(ImExit)`\n  width: 30px;\n  height: 25px;\n  &:hover {\n    fill: #DC143C;\n  }\n`\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"redux/auth/operations\";\nimport { selectUser } from \"redux/auth/selectors\";\nimport { ExitIcon, UserContainer, UserTitle } from \"./UserMenu.styled\";\nimport Button from 'react-bootstrap/Button';\n\n\nexport function UserMenu() {\n    const {name} = useSelector(selectUser)\n    const dispatch = useDispatch();\n\n  return (\n    <UserContainer>\n      <UserTitle>Welcome, {name}</UserTitle>\n      <Button variant=\"link\" onClick={() => dispatch(logOut())}><ExitIcon/></Button>\n    </UserContainer>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nexport function ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // const [favorite, setFavorite] = useState(false);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoadingContacts);\n\n  const dispatch = useDispatch();\n\n  const handChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  // const  handleChange = () => {\n\t// \tsetFavorite(!favorite);\n\t// }\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n      // favorite: favorite,\n    };\n    console.log(newContact)\n    const nameCheck = contacts.find(({ name }) => name === newContact.name);\n    if (nameCheck) {\n      toast.error(`${newContact.name} is already in contacts`);\n      return reset();\n    }\n    dispatch(addContact(newContact));\n    toast.success(`${newContact.name} added successfully`);\n    props.onHide();\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create Cotantact\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handChange}\n              value={name}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Enter number\"\n              name=\"number\"\n              pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handChange}\n              value={number}\n            />\n          </Form.Group>\n          {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check // prettier-ignore\n              type=\"switch\"\n              id=\"custom-switch\"\n              label=\"Favorite\"\n              checked={favorite}\n              onChange={handleChange}\n            />\n          </Form.Group> */}\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={isLoading ? true : false}\n          >\n            add Contact\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nContactForm.propTypes = {\n  createContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { RiUserAddFill } from 'react-icons/ri';\n// import { MdFavorite } from 'react-icons/md';\nimport Navbar from 'react-bootstrap/Navbar';\n\nexport const Navigate = styled(Navbar)`\n    justify-content: space-between;\n    padding: 5px 20px;\n    margin-bottom: 15px;\n`\nexport const AddContact = styled(RiUserAddFill)`\n        width: 30px;\n        height: 25px;\n        &:hover{\n            fill: #d9cb04;\n        }\n`\n// export const FavoriteIcon = styled(MdFavorite)`\n//         width: 30px;\n//         height: 25px;\n//         &:hover{\n//             fill: #d9cb04;\n//         }\n// `","import Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { useState } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { AddContact, Navigate } from './Header.styled';\n// import { NavLink} from 'react-router-dom';\n\n\nexport const Header = () => {\n    const [modalShow, setModalShow] = useState(false);\n    // const location = useLocation();\n    // const chooseLocation = () => { \n    //   return location.pathname === '/favorites'? '/': '/favorites'\n    // }\n\n  return (\n    <>\n      <Navigate collapseOnSelect expand=\"lg\" className=\"bg-body-tertiary\">\n        <Navbar.Brand>\n          <Button variant=\"link\" onClick={() => setModalShow(true)}>\n            <AddContact />\n          </Button>\n        </Navbar.Brand>\n        <Navbar.Brand>\n          {/* <Button variant=\"link\">\n            <NavLink to={chooseLocation()}><FavoriteIcon /></NavLink>\n          </Button> */}\n        </Navbar.Brand>\n        <Navbar.Brand>\n          <UserMenu />\n        </Navbar.Brand>\n      </Navigate>\n      <ContactForm show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n};\n","import { Container } from './Layout.styled';\nimport { Suspense } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\nimport { Vortex } from 'react-loader-spinner';\n\nexport default function Layout() {\n  return (\n    <Container>\n      <Header />\n      <Suspense\n        fallback={\n          <Vortex\n            visible={true}\n            height=\"100\"\n            width=\"100\"\n            ariaLabel=\"vortex-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"vortex-wrapper\"\n            colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    max-width: 700px;\n    padding: 30px;\n    margin: 5px auto;\n`\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contactsBook.contacts;\nexport const selectFilter = state => state.contactsBook.filter;\nexport const selectIsLoadingContacts = state => state.contactsBook.isLoading;\nexport const selectErrorContacts = state => state.contactsBook.error;\nexport const selectElectContact = state => state.contactsBook.electContact;\n\nexport const getVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n     return contacts.filter(({name})=> name.toLowerCase()\n            .includes(filter.toLowerCase()))\n    }\n  )\n// export const getFavoriteContacts = createSelector(\n//   [selectContacts], (contacts) => {\n//     return contacts.filter(({favorite}) => favorite)\n//   }\n// )\n"],"names":["UserContainer","styled","_templateObject","_taggedTemplateLiteral","UserTitle","_templateObject2","ExitIcon","ImExit","_templateObject3","UserMenu","name","useSelector","selectUser","dispatch","useDispatch","_jsxs","children","_jsx","Button","variant","onClick","logOut","ContactForm","props","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","contacts","selectContacts","isLoading","selectIsLoadingContacts","handChange","_ref","target","value","reset","Modal","_objectSpread","size","centered","closeButton","id","Form","onSubmit","e","preventDefault","newContact","console","log","find","_ref2","toast","concat","addContact","onHide","className","controlId","type","placeholder","pattern","title","required","onChange","disabled","Navigate","Navbar","AddContact","RiUserAddFill","Header","modalShow","setModalShow","_Fragment","collapseOnSelect","expand","show","Layout","Container","Suspense","fallback","Vortex","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Outlet","state","contactsBook","selectFilter","filter","selectElectContact","electContact","getVisibleContacts","createSelector","toLowerCase","includes"],"sourceRoot":""}