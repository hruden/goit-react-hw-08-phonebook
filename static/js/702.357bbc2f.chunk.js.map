{"version":3,"file":"static/js/702.357bbc2f.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/EditForm/EditForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactHome/ContactHome.styled.js","components/ContactHome/ContactHome.jsx","components/Pages/Home.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n// import Spinner from 'react-bootstrap/Spinner';\nimport { IoMdContact } from 'react-icons/io';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { MdFavorite } from 'react-icons/md';\nimport { FaUserEdit } from 'react-icons/fa';\n\n\n// export const  ContactsBook = styled.ul`\n//     display: flex;\n//     flex-direction: column;\n//     gap: 10px;\n//     padding: 15px 5px;\n//     width: 400px;\n// `\n// export const ContactsItem = styled.li`\n//     position: relative;\n//     display: flex;\n//     align-items: center;\n//     &::before{\n//         content: '';\n//         width: 3px;\n//         height: 3px;\n//         border: 1px solid black;\n//         border-radius: 50%;\n//         background-color: black;\n//         margin-right: 5px;\n//     }\n// `\nexport const DeleteContact = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #DC143C;\n    }\n`\nexport const ContactIcon = styled(IoMdContact)`\nwidth: 25px;\nheight: 25px;\nmargin-right: 15px;\n`\nexport const ContactName = styled.div`\ndisplay: flex;\ngap: 15px;\nfont-size: large;\n`\nexport const Name = styled.p`\ndisplay: block;\n`\nexport const DeleteIcon = styled(AiFillDelete)`\nwidth: 25px;\nheight: 25px;\n`\nexport const MoreDitails = styled.div`\ndisplay:flex;\npadding: 0 40px;\njustify-content: space-between;\n`\nexport const EditBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #2281f5;\n    }\n`\nexport const EditIcon = styled(FaUserEdit)`\nwidth: 25px;\nheight: 25px;\n`\nexport const FavoriteBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    &:hover{\n        color: #d9cb04;\n    }\n`\nexport const FavoriteIcon = styled(MdFavorite)`\nwidth: 25px;\nheight: 25px;\n`","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectElectContact,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { updateContact } from 'redux/contacts/operations';\n\n\nexport function EditForm(props) {\n  const electContact = useSelector(selectElectContact);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const dispatch = useDispatch();\n\n  const handChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      information: { name: name, number: number },\n      id: electContact.id,\n    };\n    const nameCheck = contacts.find(({ name }) => name === newContact.name);\n    if (nameCheck) {\n      toast.error(`${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(updateContact(newContact));\n    toast.warn('Contact change')\n    props.onHide()\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Edit Contact\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder={electContact.name}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handChange}\n              value={name}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              placeholder={electContact.number}\n              name=\"number\"\n              pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handChange}\n              value={number}\n            />\n          </Form.Group>\n          {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Add this contact in favorite\" />\n            </Form.Group> */}\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={isLoading ? true : false}\n          >\n            edit Contact\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import {\n  ContactIcon,\n  ContactName,\n  DeleteContact,\n  DeleteIcon,\n  EditBtn,\n  EditIcon,\n  FavoriteBtn,\n  FavoriteIcon,\n  MoreDitails,\n  Name,\n} from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  getVisibleContacts,\n  selectIsLoadingContacts,\n} from 'redux/contacts/selectors';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { useState } from 'react';\nimport { electContactChange } from 'redux/contacts/slice';\n// import { IoMdContact } from 'react-icons/io';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const contactsList = useSelector(getVisibleContacts);\n  const [modalShow, setModalShow] = useState(false);\n\n\n  return (\n    <Accordion defaultActiveKey=\"0\">\n      {contactsList.map(({ id, name, number }) => (\n        <Accordion.Item eventKey={id} key={id}>\n          <EditForm\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            // names={name}\n            // numbers={number}\n          />\n          <Accordion.Header>\n            <ContactName>\n              <ContactIcon />\n              <Name>{name}:</Name>\n              <Name>{number}</Name>\n            </ContactName>\n          </Accordion.Header>\n          <Accordion.Body>\n            <MoreDitails>\n              <EditBtn\n                onClick={() => {\n                  setModalShow(true);\n                  dispatch(electContactChange({ id, name, number }))\n                }}\n              >\n                <EditIcon />\n              </EditBtn>\n              <FavoriteBtn>\n                <FavoriteIcon />\n              </FavoriteBtn>\n              <DeleteContact\n                onClick={() => dispatch(deleteContact(id))}\n                disabled={isLoading ? true : false}\n              >\n                <DeleteIcon />\n              </DeleteContact>\n            </MoreDitails>\n          </Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n\n    // if(isError){\n    //     return(<div>{error.message}</div>)\n    // }\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  removeContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport const FilterInput = styled(InputGroup)`\nmargin-bottom: 30px;\n`\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterContacts } from 'redux/contacts/slice';\nimport Form from 'react-bootstrap/Form';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter)\n  const dispatch = useDispatch();\n\n  const handleFind = ({ target }) => {\n    const normalizedValue = target.value.trim().toLocaleLowerCase();\n    dispatch(filterContacts(normalizedValue));\n  };\n  return (\n    <>\n    <FilterInput size=\"lg\">\n        <Form.Control\n          aria-label=\"Large\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          onChange={handleFind}\n          value={filter}\n          name=\"searchContact\"\n          type=\"text\"\n          placeholder=\"Search contacts...\"\n  \n        />\n      </FilterInput>\n      {/* <input\n        onChange={handleFind}\n        value={filter}\n        name=\"searchContact\"\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n      /> */}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  searchContact: PropTypes.string,\n  handleFind: PropTypes.func,\n};\n","import Alert from 'react-bootstrap/Alert';\nimport styled from 'styled-components';\n\n\nexport const NotFoundAlert = styled(Alert)`\n    margin-top: 15px;\n    width: 400px;\n`\nexport const Title = styled.h2`\n    text-align: center;\n    margin-bottom: 15px;\n`","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { NotFoundAlert, Title } from './ContactHome.styled';\n\nexport const ContactHome = () => {\n    const contactsList = useSelector(getVisibleContacts);\n    const dispatch = useDispatch();\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <>\n        <Title>Contacts</Title>\n        <Filter />\n        {contactsList.length ? (\n          <ContactList />\n        ) : (\n          <NotFoundAlert variant=\"dark\">No matches found!</NotFoundAlert>\n        )}{' '}\n      </>\n    );\n};\n","import { ContactHome } from \"components/ContactHome/ContactHome\";\n\n\nexport default function Home() {\n  return (\n    <ContactHome/>\n  );\n}\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contactsBook.contacts;\nexport const selectFilter = state => state.contactsBook.filter;\nexport const selectIsLoadingContacts = state => state.contactsBook.isLoading;\nexport const selectErrorContacts = state => state.contactsBook.error;\nexport const selectElectContact = state => state.contactsBook.electContact;\n\nexport const getVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n     return contacts.filter(({name})=> name.toLowerCase()\n            .includes(filter.toLowerCase()))\n    }\n  )\n"],"names":["DeleteContact","styled","_templateObject","_taggedTemplateLiteral","ContactIcon","IoMdContact","_templateObject2","ContactName","_templateObject3","Name","_templateObject4","DeleteIcon","AiFillDelete","_templateObject5","MoreDitails","_templateObject6","EditBtn","_templateObject7","EditIcon","FaUserEdit","_templateObject8","FavoriteBtn","_templateObject9","FavoriteIcon","MdFavorite","_templateObject10","EditForm","props","electContact","useSelector","selectElectContact","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","selectContacts","isLoading","selectIsLoadingContacts","dispatch","useDispatch","handChange","_ref","target","value","reset","_jsxs","Modal","_objectSpread","size","centered","children","_jsx","closeButton","id","Form","onSubmit","e","preventDefault","newContact","information","find","_ref2","toast","concat","updateContact","onHide","className","controlId","type","placeholder","pattern","title","required","onChange","Button","variant","disabled","onClick","ContactList","contactsList","getVisibleContacts","modalShow","setModalShow","Accordion","defaultActiveKey","map","eventKey","show","electContactChange","deleteContact","FilterInput","InputGroup","Filter","filter","selectFilter","_Fragment","normalizedValue","trim","toLocaleLowerCase","filterContacts","NotFoundAlert","Alert","Title","ContactHome","useEffect","fetchContacts","length","Home","state","contactsBook","createSelector","toLowerCase","includes"],"sourceRoot":""}