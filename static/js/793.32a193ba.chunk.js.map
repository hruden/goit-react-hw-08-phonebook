{"version":3,"file":"static/js/793.32a193ba.chunk.js","mappings":"yTAWaA,EAAY,WAAO,IAADC,EACvBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAQvBG,EAAQ,WACbL,EAAS,IACTI,EAAY,GACb,EAoBC,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CAACC,SArBQ,SAAAC,GAAA,OAAAtB,EAAAA,IAAAuB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OADhCL,EAAEM,iBACIL,EAAO,CAAElB,MAAAA,EAAOI,SAAAA,GAAUgB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGxB/B,GAASiC,EAAAA,EAAAA,OAAMN,IAAO,KAAD,MACV,IAAdzB,EAAmB,CAAA2B,EAAAE,KAAA,QAEZ,OADRG,EAAAA,GAAAA,MAAY,sDACZnB,IAAQc,EAAAM,OAAA,qBAGO,IAAdjC,EAAkB,CAAA2B,EAAAE,KAAA,SACc,OAAjCG,EAAAA,GAAAA,QAAc,oBAAmBL,EAAAM,OAAA,kBAAAN,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAInCQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAd,EAAA,oBAEtBe,MAAA,KAAAC,UAAA,EAGgCvB,SAAA,EAC3BF,EAAAA,EAAAA,MAACG,EAAAA,EAAAA,MAAU,CAACuB,UAAU,OAAOC,UAAU,iBAAgBzB,SAAA,EACrD0B,EAAAA,EAAAA,KAACzB,EAAAA,EAAAA,MAAU,CAAAD,SAAC,mBACZ0B,EAAAA,EAAAA,KAACzB,EAAAA,EAAAA,QAAY,CACX0B,KAAK,QACLC,KAAK,QACLC,YAAY,cACZC,MAAOvC,EACPwC,SAvCW,SAAAvB,GACnBhB,EAASgB,EAAEwB,OAAOF,MAAMG,OAC1B,EAsCUC,UAAQ,QAIZpC,EAAAA,EAAAA,MAACG,EAAAA,EAAAA,MAAU,CAACuB,UAAU,OAAOC,UAAU,oBAAmBzB,SAAA,EACxD0B,EAAAA,EAAAA,KAACzB,EAAAA,EAAAA,MAAU,CAAAD,SAAC,cACZ0B,EAAAA,EAAAA,KAACzB,EAAAA,EAAAA,QAAY,CACX0B,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,MAAOnC,EACPoC,SAhDc,SAAAvB,GACtBZ,EAAYY,EAAEwB,OAAOF,MAAMG,OAC7B,EA+CUC,UAAQ,QAGZR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,QAAQ,UAAUT,KAAK,SAAQ3B,SAAC,eAI1CF,EAAAA,EAAAA,MAACuC,EAAAA,EAAAA,KAAS,CAAArC,SAAA,CAAC,iBAET0B,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAACC,GAAG,YAAWvC,SAAC,kBAIhC,ECjFe,SAASwC,IACpB,OACEd,EAAAA,EAAAA,KAAA,OAAA1B,UACE0B,EAAAA,EAAAA,KAAC9C,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.jsx","components/Pages/Login.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  // const isError = useSelector(selectError);\n  const isLogedIn = useSelector(selectIsLoggedIn)\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const emailHandler = e => {\n    setEmail(e.target.value.trim());\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value.trim());\n  };\n const reset = ()=>{\n  setEmail('')\n  setPassword('')\n }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = { email, password };\n\n    try {\n      await dispatch(logIn(user));\n      if(isLogedIn === false){\n        toast.error('User with that email or password is does not exist');\n        reset();\n          return;\n      }\n      if(isLogedIn === true){\n        toast.success('Login successful')\n        return\n      }\n    } catch (error) {\n      console.log(error);\n    }   \n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={emailHandler}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={passwordHandler}\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n      </Form>\n      <Card.Text>\n        Not a member?\n        <NavLink to=\"/register\"> Sign up</NavLink>\n      </Card.Text>\n    </>\n  );\n};\n","import { LoginForm } from \"components/LoginForm/LoginForm\";\n\nexport default function Login() {\n    return (\n      <div>\n        <LoginForm />\n      </div>\n    );\n  }"],"names":["LoginForm","_ref","dispatch","useDispatch","isLogedIn","useSelector","selectIsLoggedIn","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","reset","_jsxs","_Fragment","children","Form","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","user","wrap","_context","prev","next","preventDefault","logIn","toast","abrupt","t0","console","log","stop","apply","arguments","className","controlId","_jsx","type","name","placeholder","value","onChange","target","trim","required","Button","variant","Card","NavLink","to","Login"],"sourceRoot":""}